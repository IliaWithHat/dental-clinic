services:
  database:
    image: postgres:16.1
    container_name: postgres-container
    env_file: environments/database_env
    volumes:
      - ./sql/keycloak.sql:/docker-entrypoint-initdb.d/1-keycloak.sql
      - ./sql/init-appointment_service.sql:/docker-entrypoint-initdb.d/2-init.sql
      - ./sql/init-review_service.sql:/docker-entrypoint-initdb.d/3-init.sql
      - ./sql/init-time_service.sql:/docker-entrypoint-initdb.d/4-init.sql
      - dental-clinic-data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "5432:5432"
    networks:
      backend:
        aliases:
          - "database"

  liquibase:
    image: liquibase/liquibase:4.28
    container_name: liquibase-container
    command: update
    env_file: environments/liquibase_env
    volumes:
      - ./liquibase/changelog:/liquibase/changelog
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend

  zookeeper:
    image: bitnami/zookeeper:3.9.2
    container_name: zookeeper-container
    env_file: environments/zookeeper_env
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      backend:
        aliases:
          - "zookeeper"

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka-container
    env_file: environments/kafka_env
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    networks:
      backend:
        aliases:
          - "kafka"

  config-server:
    image: iliawithhat/config-server
    container_name: config-server-container
    healthcheck:
      test: curl -fs localhost:8000/actuator/health | grep UP || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    ports:
      - "8000:8000"
    networks:
      backend:
        aliases:
          - "config"

  keycloak:
    image: bitnami/keycloak:24.0.4
    container_name: keycloak-container
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      KEYCLOAK_DATABASE_USER: keycloak_user
      KEYCLOAK_DATABASE_PASSWORD: password
      KEYCLOAK_DATABASE_NAME: keycloak
      KEYCLOAK_DATABASE_HOST: database

      KEYCLOAK_HTTP_PORT: 8001
      KC_HOSTNAME_URL: http://keycloak:8001
      KC_HOSTNAME_ADMIN_URL: http://keycloak:8001

      KC_LOG_LEVEL: INFO
      KC_HEALTH_ENABLED: true
    healthcheck:
      test: curl -fs localhost:8001/health | grep UP || exit 1
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 120s
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8001:8001"
    networks:
      backend:
        aliases:
          - "keycloak"

  eureka-server:
    image: iliawithhat/eureka-server
    container_name: eureka-server-container
    env_file: environments/public_env
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8002:8002"
    networks:
      backend:
        aliases:
          - "eureka"

  gateway-server:
    image: iliawithhat/gateway-server
    container_name: gateway-server-container
    env_file: environments/public_env
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - "8003:8003"
    networks:
      - backend

  user-service:
    image: iliawithhat/user-service
    container_name: user-service-container
    env_file:
      - environments/public_env
      - environments/keycloak_credentials_env
      - environments/keycloak_secret_env
    depends_on:
      config-server:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8010:8010"
    networks:
      - backend

  time-service:
    image: iliawithhat/time-service
    container_name: time-service-container
    env_file:
      - environments/public_env
      - environments/time_env
      - environments/keycloak_secret_env
    depends_on:
      config-server:
        condition: service_healthy
      database:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
    ports:
      - "8011:8011"
    networks:
      - backend

  appointment-service:
    image: iliawithhat/appointment-service
    container_name: appointment-service-container
    env_file:
      - environments/public_env
      - environments/appointment_env
      - environments/keycloak_secret_env
    depends_on:
      config-server:
        condition: service_healthy
      database:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
      kafka:
        condition: service_started
    ports:
      - "8012:8012"
    networks:
      - backend

  review-service:
    image: iliawithhat/review-service
    container_name: review-service-container
    env_file:
      - environments/public_env
      - environments/review_env
      - environments/keycloak_secret_env
    depends_on:
      config-server:
        condition: service_healthy
      database:
        condition: service_healthy
      liquibase:
        condition: service_completed_successfully
    ports:
      - "8013:8013"
    networks:
      - backend

  mail-sender-service:
    image: iliawithhat/mail-sender-service
    container_name: mail-sender-service-container
    env_file:
      - environments/public_env
      - environments/mail_sender_env
    depends_on:
      config-server:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - backend

  mail-scheduler-service:
    image: iliawithhat/mail-scheduler-service
    container_name: mail-scheduler-service-container
    env_file:
      - environments/public_env
      - environments/keycloak_credentials_env
    depends_on:
      config-server:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  dental-clinic-data:
    name: dental-clinic-data