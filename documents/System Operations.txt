User Service
------------------------------------------------------------------------------------------------------------------------
User {
    Int id,
    String email,
    String firstName,
    String lastName,
    LocalDate birthDate,
    String phone,
    String password,
    Bool isWorking,
    Enum role
}
Token {
    String accessToken
}

POST /{role}/login
Token login(User) -> аутентификация пользователя

POST /{role}
User createUser(User) -> создать пользователя с разными ролями

PUT /{role}/{id}
User updateUser(User) -> обновить пользователя

DELETE /{role}/{id}
void deleteUser(Int id) -> удалить пользователя

GET /{role}/{id}
List<User> findById(Int id) -> найти пользователя

GET /{role}
List<User> findByRole(Role) -> найти пользователей по роли
------------------------------------------------------------------------------------------------------------------------


Time Service
------------------------------------------------------------------------------------------------------------------------
WorkingTime {
    String day,
    LocalTime startHour,
    LocalTime endHour,
    Int timeIntervalInMinutes,
    Int doctorId
}

POST /working-time
void createWorkingTime(List<WorkingTime>) -> установить рабочее время врача

DELETE /working-time/{doctorId}
void deleteWorkingTime(Int doctorId) -> удалить рабочее время врача

GET /working-time/{doctorId}
List<WorkingTime> findByDoctorId(Int doctorId) -> найти рабочее время врача
------------------------------------------------------------------------------------------------------------------------


Appointment Service
------------------------------------------------------------------------------------------------------------------------
Appointment {
    Int id,
    LocalDateTime date,
    boolean isPatientCome,
    String serviceInfo,
    BigDecimal price,
    Int patientId,
    Int doctorId
}
DateRange {
    LocalDate from,
    LocalDate to
}

POST /{role}/{patientId}/appointment
Appointment createAppointment(Appointment) -> создать запись к врачу

PUT /{role}/{patientId}/appointment/{id}
Appointment updateAppointment(Appointment) -> обновить запись

DELETE /{role}/{patientId}/appointment/{id}
void deleteAppointment(Int appointmentId) -> удалить запись

GET /{role}/{patientId}/appointment
List<Appointment> findAllOccupiedAppointmentsByPatientId(Int patientId) -> найти все занятые записи пациента к врачу

GET /{role}/{doctorId}/appointment?from={date}&to={date}&state=occupied
List<Appointment> findAllOccupiedAppointmentsByDateRangeAndDoctorId(DateRange, Int doctorId) -> найти все занятые записи
к врачу по заданному диапазону

GET /{role}/{doctorId}/appointment?from={date}&to={date}&state=free
List<Appointment> findAllFreeAppointmentsByDateRangeAndDoctorId(DateRange, Int doctorId) -> найти все доступные записи
к врачу по заданному диапазону

{role} can be patient or doctor
------------------------------------------------------------------------------------------------------------------------


Email Service
------------------------------------------------------------------------------------------------------------------------
void sendAppointmentConfirmationEmailToPatient(Appointment) -> отправить письмо с подтверждением записи к врачу
void sendNotificationEmailToPatient() -> отправить письмо с напоминанием о записи за день пациенту
void sendReportEmailToOwner() -> отправить письмо с отчётом владельцу
------------------------------------------------------------------------------------------------------------------------